@model GameIndexOutputModel

<h2>Games</h2>
@if (User.IsInRole("Administrator"))
{
    <a href="@Url.Action("Create", "Game")" class="btn btn-success">Create New Game</a>
}
<table class="table">
    <thead>
        <tr>
            <th>Image</th>
            <th>Title</th>
            <th>Price</th>
            <th>Description</th>
            <th>Average Rating</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var game in Model.Games)
        {
            <tr>
                <td>
                    <img src="@game.ImageUrl" alt="@game.Title" style="max-width: 100px; max-height: 100px;" />
                </td>
                <td>@game.Title</td>
                <td>@game.Price.ToString("C")</td>
                <td>@game.Description</td>
                <td>
                    @if (game.Reviews.Any())
                    {
                        @string.Format("{0:0.0}", game.Reviews.Average(r => r.Rating))
                    }
                    else
                    {
                        <span>No Ratings</span>
                    }
                </td>
                <td>
                    @if (User.IsInRole("Administrator"))
                    {
                        <a href="@Url.Action("Edit", "Game", new { id = game.GameId })" class="btn btn-primary">Edit</a>
                        <a href="@Url.Action("Delete", "Game", new { id = game.GameId })" class="btn btn-danger">Delete</a>
                    }
                    @if (User.Identity.IsAuthenticated)
                    {
                        <form asp-action="AddToCart" asp-controller="ShoppingCart" method="post" style="display:inline;">
                            <input type="hidden" name="gameId" value="@game.GameId" />
                            <button type="submit" class="btn btn-primary">Order</button>
                        </form>
                    }
                    else
                    {
                        <a href="@Url.Action("Login", "ApplicationUser", new { returnUrl = Url.Action("Index", "Game") })" class="btn btn-primary">Order</a>
                    }
                    <a href="@Url.Action("Details", "Game", new { id = game.GameId })" class="btn btn-primary">View Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", "Game", new { page = Model.CurrentPage - 1, searchQuery = Model.SearchQuery })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
            @for (var i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Game", new { page = i, searchQuery = Model.SearchQuery })">@i</a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", "Game", new { page = Model.CurrentPage + 1, searchQuery = Model.SearchQuery })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
}
